{"id":"App.svelte","dependencies":[{"name":"D:\\projects\\svelte-slide\\package.json","includedInParent":true,"mtime":1602098219218},{"name":"svelte/internal","loc":{"line":30,"column":7},"parent":"D:\\projects\\svelte-slide\\App.svelte","resolved":"D:\\projects\\svelte-slide\\node_modules\\svelte\\internal\\index.mjs"},{"name":"./Entry.svelte","loc":{"line":32,"column":18},"parent":"D:\\projects\\svelte-slide\\App.svelte","resolved":"D:\\projects\\svelte-slide\\Entry.svelte"},{"name":"svelte/transition","loc":{"line":33,"column":22},"parent":"D:\\projects\\svelte-slide\\App.svelte","resolved":"D:\\projects\\svelte-slide\\node_modules\\svelte\\transition\\index.mjs"},{"name":"_css_loader","parent":"D:\\projects\\svelte-slide\\App.svelte","resolved":"D:\\projects\\svelte-slide\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _internal = require(\"svelte/internal\");\n\nvar _Entry = _interopRequireDefault(require(\"./Entry.svelte\"));\n\nvar _transition = require(\"svelte/transition\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar file = \"App.svelte\";\n\nfunction add_css() {\n  var style = (0, _internal.element)(\"style\");\n  style.id = \"svelte-6yfva9-style\";\n  style.textContent = \".col.svelte-6yfva9{width:200px;margin-right:20px;border:1px solid black;height:300px;display:inline-block}\\n\";\n  (0, _internal.append_dev)(document.head, style);\n}\n\nfunction get_each_context(ctx, list, i) {\n  var child_ctx = ctx.slice();\n  child_ctx[2] = list[i];\n  return child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n  var child_ctx = ctx.slice();\n  child_ctx[2] = list[i];\n  return child_ctx;\n} // (27:4) {#each entries.reverse() as entry (entry.unique_id)}\n\n\nfunction create_each_block_1(key_1, ctx) {\n  var div;\n  var entry;\n  var t;\n  var div_transition;\n  var current;\n  entry = new _Entry.default({\n    props: {\n      entry:\n      /*entry*/\n      ctx[2]\n    },\n    $$inline: true\n  });\n  var block = {\n    key: key_1,\n    first: null,\n    c: function create() {\n      div = (0, _internal.element)(\"div\");\n      (0, _internal.create_component)(entry.$$.fragment);\n      t = (0, _internal.space)();\n      (0, _internal.add_location)(div, file, 27, 8, 593);\n      this.first = div;\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, div, anchor);\n      (0, _internal.mount_component)(entry, div, null);\n      (0, _internal.append_dev)(div, t);\n      current = true;\n    },\n    p: function update(ctx, dirty) {\n      var entry_changes = {};\n      if (dirty &\n      /*entries*/\n      1) entry_changes.entry =\n      /*entry*/\n      ctx[2];\n      entry.$set(entry_changes);\n    },\n    i: function intro(local) {\n      if (current) return;\n      (0, _internal.transition_in)(entry.$$.fragment, local);\n      (0, _internal.add_render_callback)(function () {\n        if (!div_transition) div_transition = (0, _internal.create_bidirectional_transition)(div, _transition.slide, {}, true);\n        div_transition.run(1);\n      });\n      current = true;\n    },\n    o: function outro(local) {\n      (0, _internal.transition_out)(entry.$$.fragment, local);\n      if (!div_transition) div_transition = (0, _internal.create_bidirectional_transition)(div, _transition.slide, {}, false);\n      div_transition.run(0);\n      current = false;\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(div);\n      (0, _internal.destroy_component)(entry);\n      if (detaching && div_transition) div_transition.end();\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_each_block_1.name,\n    type: \"each\",\n    source: \"(27:4) {#each entries.reverse() as entry (entry.unique_id)}\",\n    ctx: ctx\n  });\n  return block;\n} // (35:4) {#each entries.reverse() as entry}\n\n\nfunction create_each_block(ctx) {\n  var div;\n  var entry;\n  var t;\n  var div_transition;\n  var current;\n  entry = new _Entry.default({\n    props: {\n      entry:\n      /*entry*/\n      ctx[2]\n    },\n    $$inline: true\n  });\n  var block = {\n    c: function create() {\n      div = (0, _internal.element)(\"div\");\n      (0, _internal.create_component)(entry.$$.fragment);\n      t = (0, _internal.space)();\n      (0, _internal.add_location)(div, file, 35, 8, 762);\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, div, anchor);\n      (0, _internal.mount_component)(entry, div, null);\n      (0, _internal.append_dev)(div, t);\n      current = true;\n    },\n    p: function update(ctx, dirty) {\n      var entry_changes = {};\n      if (dirty &\n      /*entries*/\n      1) entry_changes.entry =\n      /*entry*/\n      ctx[2];\n      entry.$set(entry_changes);\n    },\n    i: function intro(local) {\n      if (current) return;\n      (0, _internal.transition_in)(entry.$$.fragment, local);\n      (0, _internal.add_render_callback)(function () {\n        if (!div_transition) div_transition = (0, _internal.create_bidirectional_transition)(div, _transition.slide, {}, true);\n        div_transition.run(1);\n      });\n      current = true;\n    },\n    o: function outro(local) {\n      (0, _internal.transition_out)(entry.$$.fragment, local);\n      if (!div_transition) div_transition = (0, _internal.create_bidirectional_transition)(div, _transition.slide, {}, false);\n      div_transition.run(0);\n      current = false;\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(div);\n      (0, _internal.destroy_component)(entry);\n      if (detaching && div_transition) div_transition.end();\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_each_block.name,\n    type: \"each\",\n    source: \"(35:4) {#each entries.reverse() as entry}\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction create_fragment(ctx) {\n  var button;\n  var t1;\n  var div2;\n  var div0;\n  var each_blocks_1 = [];\n  var each0_lookup = new Map();\n  var t2;\n  var div1;\n  var current;\n  var mounted;\n  var dispose;\n  var each_value_1 =\n  /*entries*/\n  ctx[0].reverse();\n  (0, _internal.validate_each_argument)(each_value_1);\n\n  var get_key = function get_key(ctx) {\n    return (\n      /*entry*/\n      ctx[2].unique_id\n    );\n  };\n\n  (0, _internal.validate_each_keys)(ctx, each_value_1, get_each_context_1, get_key);\n\n  for (var i = 0; i < each_value_1.length; i += 1) {\n    var child_ctx = get_each_context_1(ctx, each_value_1, i);\n    var key = get_key(child_ctx);\n    each0_lookup.set(key, each_blocks_1[i] = create_each_block_1(key, child_ctx));\n  }\n\n  var each_value =\n  /*entries*/\n  ctx[0].reverse();\n  (0, _internal.validate_each_argument)(each_value);\n  var each_blocks = [];\n\n  for (var _i = 0; _i < each_value.length; _i += 1) {\n    each_blocks[_i] = create_each_block(get_each_context(ctx, each_value, _i));\n  }\n\n  var out = function out(i) {\n    return (0, _internal.transition_out)(each_blocks[i], 1, 1, function () {\n      each_blocks[i] = null;\n    });\n  };\n\n  var block = {\n    c: function create() {\n      button = (0, _internal.element)(\"button\");\n      button.textContent = \"Add\";\n      t1 = (0, _internal.space)();\n      div2 = (0, _internal.element)(\"div\");\n      div0 = (0, _internal.element)(\"div\");\n\n      for (var _i2 = 0; _i2 < each_blocks_1.length; _i2 += 1) {\n        each_blocks_1[_i2].c();\n      }\n\n      t2 = (0, _internal.space)();\n      div1 = (0, _internal.element)(\"div\");\n\n      for (var _i3 = 0; _i3 < each_blocks.length; _i3 += 1) {\n        each_blocks[_i3].c();\n      }\n\n      (0, _internal.add_location)(button, file, 22, 0, 453);\n      (0, _internal.attr_dev)(div0, \"class\", \"col svelte-6yfva9\");\n      (0, _internal.add_location)(div0, file, 25, 4, 508);\n      (0, _internal.attr_dev)(div1, \"class\", \"col svelte-6yfva9\");\n      (0, _internal.add_location)(div1, file, 33, 4, 695);\n      (0, _internal.add_location)(div2, file, 24, 0, 497);\n    },\n    l: function claim(nodes) {\n      throw new Error(\"options.hydrate only works if the component was compiled with the `hydratable: true` option\");\n    },\n    m: function mount(target, anchor) {\n      (0, _internal.insert_dev)(target, button, anchor);\n      (0, _internal.insert_dev)(target, t1, anchor);\n      (0, _internal.insert_dev)(target, div2, anchor);\n      (0, _internal.append_dev)(div2, div0);\n\n      for (var _i4 = 0; _i4 < each_blocks_1.length; _i4 += 1) {\n        each_blocks_1[_i4].m(div0, null);\n      }\n\n      (0, _internal.append_dev)(div2, t2);\n      (0, _internal.append_dev)(div2, div1);\n\n      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {\n        each_blocks[_i5].m(div1, null);\n      }\n\n      current = true;\n\n      if (!mounted) {\n        dispose = (0, _internal.listen_dev)(button, \"click\",\n        /*addEntry*/\n        ctx[1], false, false, false);\n        mounted = true;\n      }\n    },\n    p: function update(ctx, _ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          dirty = _ref2[0];\n\n      if (dirty &\n      /*entries*/\n      1) {\n        var _each_value_ =\n        /*entries*/\n        ctx[0].reverse();\n\n        (0, _internal.validate_each_argument)(_each_value_);\n        (0, _internal.group_outros)();\n        (0, _internal.validate_each_keys)(ctx, _each_value_, get_each_context_1, get_key);\n        each_blocks_1 = (0, _internal.update_keyed_each)(each_blocks_1, dirty, get_key, 1, ctx, _each_value_, each0_lookup, div0, _internal.outro_and_destroy_block, create_each_block_1, null, get_each_context_1);\n        (0, _internal.check_outros)();\n      }\n\n      if (dirty &\n      /*entries*/\n      1) {\n        each_value =\n        /*entries*/\n        ctx[0].reverse();\n        (0, _internal.validate_each_argument)(each_value);\n\n        var _i6;\n\n        for (_i6 = 0; _i6 < each_value.length; _i6 += 1) {\n          var _child_ctx = get_each_context(ctx, each_value, _i6);\n\n          if (each_blocks[_i6]) {\n            each_blocks[_i6].p(_child_ctx, dirty);\n\n            (0, _internal.transition_in)(each_blocks[_i6], 1);\n          } else {\n            each_blocks[_i6] = create_each_block(_child_ctx);\n\n            each_blocks[_i6].c();\n\n            (0, _internal.transition_in)(each_blocks[_i6], 1);\n\n            each_blocks[_i6].m(div1, null);\n          }\n        }\n\n        (0, _internal.group_outros)();\n\n        for (_i6 = each_value.length; _i6 < each_blocks.length; _i6 += 1) {\n          out(_i6);\n        }\n\n        (0, _internal.check_outros)();\n      }\n    },\n    i: function intro(local) {\n      if (current) return;\n\n      for (var _i7 = 0; _i7 < each_value_1.length; _i7 += 1) {\n        (0, _internal.transition_in)(each_blocks_1[_i7]);\n      }\n\n      for (var _i8 = 0; _i8 < each_value.length; _i8 += 1) {\n        (0, _internal.transition_in)(each_blocks[_i8]);\n      }\n\n      current = true;\n    },\n    o: function outro(local) {\n      for (var _i9 = 0; _i9 < each_blocks_1.length; _i9 += 1) {\n        (0, _internal.transition_out)(each_blocks_1[_i9]);\n      }\n\n      each_blocks = each_blocks.filter(Boolean);\n\n      for (var _i10 = 0; _i10 < each_blocks.length; _i10 += 1) {\n        (0, _internal.transition_out)(each_blocks[_i10]);\n      }\n\n      current = false;\n    },\n    d: function destroy(detaching) {\n      if (detaching) (0, _internal.detach_dev)(button);\n      if (detaching) (0, _internal.detach_dev)(t1);\n      if (detaching) (0, _internal.detach_dev)(div2);\n\n      for (var _i11 = 0; _i11 < each_blocks_1.length; _i11 += 1) {\n        each_blocks_1[_i11].d();\n      }\n\n      (0, _internal.destroy_each)(each_blocks, detaching);\n      mounted = false;\n      dispose();\n    }\n  };\n  (0, _internal.dispatch_dev)(\"SvelteRegisterBlock\", {\n    block: block,\n    id: create_fragment.name,\n    type: \"component\",\n    source: \"\",\n    ctx: ctx\n  });\n  return block;\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n  var _$$props$$$slots = $$props.$$slots,\n      slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,\n      $$scope = $$props.$$scope;\n  (0, _internal.validate_slots)(\"App\", slots, []);\n  var entries = [];\n\n  function addEntry() {\n    entries.push({\n      unique_id: Date.now(),\n      message: \"HERE I AM\"\n    });\n    $$invalidate(0, entries);\n  }\n\n  var writable_props = [];\n  Object.keys($$props).forEach(function (key) {\n    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== \"$$\") console.warn(\"<App> was created with unknown prop '\".concat(key, \"'\"));\n  });\n\n  $$self.$capture_state = function () {\n    return {\n      Entry: _Entry.default,\n      slide: _transition.slide,\n      entries: entries,\n      addEntry: addEntry\n    };\n  };\n\n  $$self.$inject_state = function ($$props) {\n    if (\"entries\" in $$props) $$invalidate(0, entries = $$props.entries);\n  };\n\n  if ($$props && \"$$inject\" in $$props) {\n    $$self.$inject_state($$props.$$inject);\n  }\n\n  return [entries, addEntry];\n}\n\nvar App = /*#__PURE__*/function (_SvelteComponentDev) {\n  _inherits(App, _SvelteComponentDev);\n\n  var _super = _createSuper(App);\n\n  function App(options) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, options);\n    if (!document.getElementById(\"svelte-6yfva9-style\")) add_css();\n    (0, _internal.init)(_assertThisInitialized(_this), options, instance, create_fragment, _internal.safe_not_equal, {});\n    (0, _internal.dispatch_dev)(\"SvelteRegisterComponent\", {\n      component: _assertThisInitialized(_this),\n      tagName: \"App\",\n      options: options,\n      id: create_fragment.name\n    });\n    return _this;\n  }\n\n  return App;\n}(_internal.SvelteComponentDev);\n\nvar _default = App;\nexports.default = _default;","css":".col.svelte-6yfva9{width:200px;margin-right:20px;border:1px solid black;height:300px;display:inline-block}"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"f47e53eac39bf21f7ebc56c7ac363e07","cacheData":{"env":{}}}